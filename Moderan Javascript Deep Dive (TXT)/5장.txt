5.1 값 

	- 평가되어 생성된 결과
	- 모든 값은 데이터 타입을 가짐
	- 메모리에 2진수, 즉 비트의 나열로 저장됨
	- 변수에 할당되는 것

5.2 리터럴
	- 사람이 이해할 수 있는 문자 또는 약속된 기호를 사용해 값을 생성하는 표기법
	- 런타임에 리터럴을 평가해 값을 생성
	- 값을 생성하기 위해 미리 약속한 표기법


5.3 표현식
	- 값으로 평가될 수 있는 문(statement)
	- 표현식이 평가되면 새로운 값을 생성하거나, 기존 값을 참조함


5.4 문 (statement)
	- 프로그램을 구성하는 기본 단위이자 최소 실행 단위
	- 문의 집합 = 프로그램
	- 문을 작성하고 순서에 맞게 나열 = 프로그래밍
	- 문은 여러 토큰으로 구성됨	

	- 토큰 (token)
		: 문법적인 의미를 가지며, 문법적으로 더 이상 나눌 수 없는 코드의 기본 요소


5.5 세미콜론과 세미콜론 자동 삽입 기능
	- 세미콜론 (;)
		- 문의 종료를 나타냄
		- 자바스크립트 엔진은 세미콜론으로 문이 종료한 위치를 파악하고 순차적으로 하나씩 문을 실행
		- 문을 중괄호로 묶은 코드 블록 (  { } ) 뒤에는 세미콜론을 붙이지 않음
			: 코드 블록은 문의 종료를 의미하는 '자체 종결성'을 갖기 때문
		- 문의 끝에 붙이는 세미콜론은 옵션
			: 생략 가능
			: 자바스크립트 엔진의 "세미콜론 자동삽입 기능" 때문
			: 붙이자 말자 논란이 있으나, 붙이는 걸 권장하는 분위기


5.6 표현식인 문과 표현식이 아닌 문
	- 표현식인 문
		- 값으로 평가될 수 있는 문
		- ex) 할당문
		
	- 표현식이 아닌 문
		- 값으로 평가될 수 없는 문
		 - ex) 변수 선언문
		 
	- 구별기준
		: 변수에 할당해본다 -> 할당 가능 = 표현식 / 할당불가 = 표현식X
		: 크롬 개발자 도구에서 실행해본다 -> 평가된 값을 반환하면 표현식, undefined를 반환하면 표현식X
	